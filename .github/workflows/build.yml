name: CI

on:
  push:
    branches: [ release ]
  pull_request:
    branches: [ dev, release ]

jobs:



  build_luac_cross_win:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Build luac.cross.exe
      run: |
        set
        "%programfiles%\git\usr\bin\xargs"
        cd msvc
        ls "%programfiles(x86)%" 
        ls -l "%programfiles(x86)%\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\msbuild.exe"
        "%programfiles(x86)%\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\msbuild.exe" /p:Configuration=Release /p:Platform=x64
        mv luac-cross/x64/Release/luac.cross.exe ..
      shell: cmd
    - name: Upload luac.cross
      if: ${{ success() }}
      uses: actions/upload-artifact@v2
      with:
        name: luac.cross_51_float_win
        path: luac.cross.exe



  compile_lua_win:

    strategy:
      fail-fast: false
      matrix:
        lua_ver: [51]
        numbers: ['float']
        filter: [ 'cat' ]
    needs: build_luac_cross_win
    runs-on: windows-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        submodules: false
    - name: Download luac.cross
      uses: actions/download-artifact@v1
      with:
        name: luac.cross_${{ matrix.lua_ver }}_${{ matrix.numbers }}_win
        path: ./
    - name: compile Lua
      run: |
        PATH="/C/Program\ Files/Git/usr/bin:${PATH}"
        find lua_modules lua_examples tests/NTest* -iname "*.lua" | ${{ matrix.filter }} | xargs --delimiter="\n" echo
        find lua_modules lua_examples tests/NTest* -iname "*.lua" | ${{ matrix.filter }} | xargs --delimiter="\n" ./luac.cross -p
      shell: bash



  NTest_win:

    strategy:
      fail-fast: false
      matrix:
        lua_ver: [51]
        numbers: ['float']
    needs: build_luac_cross_win
    runs-on: windows-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        submodules: false
    - name: Download luac.cross
      uses: actions/download-artifact@v1
      with:
        name: luac.cross_${{ matrix.lua_ver }}_${{ matrix.numbers }}_win
        path: ./
    - name: NTest selfcheck
      run: |
        cd tests/NTest
        ../../luac.cross.exe -e ../NTest/NTest_NTest.lua | tee log
        grep "failed. 0" log
      shell: bash
    - name: NTest hosttests
      run: |
        cd tests
        cp NTest/NTest.lua .
        ../luac.cross.exe -e NTest_lua.lua | tee log
        (if grep  " ==>  " log ; then exit 1 ; fi)
      shell: bash


